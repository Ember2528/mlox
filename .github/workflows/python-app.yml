name: Release App

on: 
  push:
    tags:
    - '*'

jobs:
  ubuntu:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        pipenv install --system
        pip install flake8 pyinstaller
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 ./mlox/ --count --select=E9,F63,F7,F82 --show-source --statistics      
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 ./mlox/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Build exe
      run: |
        pyinstaller mlox_linux.spec 

    # RELEASE
    - name: Release
      uses: ncipollo/release-action@v1
      with:
        draft: true
        generateReleaseNotes: true
        artifacts: "dist/mlox_linux,dist/mlox-update.bat"
        token: ${{ secrets.GITHUB_TOKEN }}


  windows:
    runs-on: windows-latest
    needs: [ubuntu]
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        pipenv install --system
        pip install pyinstaller

    - name: Build exe
      run: |
        pyinstaller mlox.spec 

    # RELEASE
    - name: Release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        draft: true
        artifacts: "dist/mlox.exe"
        token: ${{ secrets.GITHUB_TOKEN }}

  macos:
    runs-on: macos-latest
    needs: [ubuntu]
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        pipenv install --system
        pip install pyinstaller

    - name: Build exe
      run: |
        pyinstaller mlox_macos.spec 

    # RELEASE
    - name: Release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        draft: true
        artifacts: "dist/mlox_macos"
        token: ${{ secrets.GITHUB_TOKEN }}
